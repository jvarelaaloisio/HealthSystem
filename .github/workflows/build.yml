name: .NET Framework CI

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Restore NuGet packages
      run: nuget restore Projects/LS/LS.sln

    - name: Build
      run: msbuild /p:Configuration=Release Projects/LS/LS.sln

    - name: Test
      run: |
        nuget install NUnit.ConsoleRunner -Version 3.11.1
        ./NUnit.ConsoleRunner.3.11.1/tools/nunit3-console.exe Projects/LS/LS.UnitTests/bin/Release/LS.UnitTests.dll

    # - name: Create tag
    #   id: create_tag
    #   run: |
    #     echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
        
    # - name: Push tag
    #   run: |
    #     git tag ${{ env.tag }}
    #     git push origin ${{ env.tag }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        tag_name: ${{ env.tag }}
        release_name: Release ${{ env.NextAutomatedTag }}
        draft: false
        prerelease: false

    - name: Upload .dll file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Projects/LS/LS/bin/Release/LS.dll
        asset_name: LS.dll
        asset_content_type: application/octet-stream

    - name: Upload .pdb file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: Projects/LS/LS/bin/Release/LS.pdb
        asset_name: LS.pdb
        asset_content_type: application/octet-stream